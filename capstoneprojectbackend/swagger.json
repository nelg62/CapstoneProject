{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Capstone Project API",
    "description": "API documentation for the Capstone Project",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "host": "localhost:8080",
  "basePath": "/",
  "tags": [
    {
      "name": "Users",
      "description": "API for user management"
    },
    {
      "name": "Products",
      "description": "API for product management"
    },
    {
      "name": "Cart",
      "description": "API for cart management"
    },
    {
      "name": "Orders",
      "description": "API for order management"
    }
  ],
  "schemes": ["http"],
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "paths": {
    "/api/users/register": {
      "post": {
        "tags": ["Users"],
        "summary": "Register a new user",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "username": { "type": "string" },
                "emailId": { "type": "string" },
                "password": { "type": "string" }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User registered successfully",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "500": {
            "description": "Failed to register user"
          }
        }
      }
    },
    "/api/users/login": {
      "post": {
        "tags": ["Users"],
        "summary": "Login a user",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "emailId": { "type": "string" },
                "password": { "type": "string" }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User logged in successfully",
            "schema": {
              "type": "object",
              "properties": {
                "user": { "$ref": "#/definitions/User" },
                "token": { "type": "string" }
              }
            }
          },
          "400": {
            "description": "Invalid email or password"
          },
          "500": {
            "description": "Failed to login user"
          }
        }
      }
    },
    "/api/users/me": {
      "get": {
        "tags": ["Users"],
        "summary": "Get user information",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "User information retrieved successfully",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "401": {
            "description": "Authorization header missing or token missing"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Failed to get user info"
          }
        }
      }
    },
    "/api/products": {
      "get": {
        "tags": ["Products"],
        "summary": "Get list of all products",
        "parameters": [
          {
            "name": "sortBy",
            "in": "query",
            "type": "string",
            "description": "Field to sort by"
          },
          {
            "name": "order",
            "in": "query",
            "type": "string",
            "enum": ["asc", "desc"],
            "default": "asc",
            "description": "Sort order"
          },
          {
            "name": "category",
            "in": "query",
            "type": "string",
            "description": "Filter by category"
          }
        ],
        "responses": {
          "200": {
            "description": "List of products retrieved successfully",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Product" }
            }
          },
          "500": {
            "description": "Failed to fetch products"
          }
        }
      }
    },
    "/api/products/{id}": {
      "get": {
        "tags": ["Products"],
        "summary": "Get one product by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "Product ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Product retrieved successfully",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          },
          "404": {
            "description": "Product not found"
          },
          "500": {
            "description": "Failed to fetch product"
          }
        }
      },
      "delete": {
        "tags": ["Products"],
        "summary": "Delete a product",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "Product ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Product deleted successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": { "type": "string" }
              }
            }
          },
          "404": {
            "description": "Product not found"
          },
          "500": {
            "description": "Failed to delete product"
          }
        }
      }
    },
    "/api/cart": {
      "post": {
        "tags": ["Cart"],
        "summary": "Add an item to the cart",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "userId": { "type": "integer" },
                "productId": { "type": "integer" }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Item added to the cart successfully",
            "schema": {
              "$ref": "#/definitions/CartItem"
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Failed to add product to cart"
          }
        }
      },
      "delete": {
        "tags": ["Cart"],
        "summary": "Remove an item from the cart",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "userId": { "type": "integer" },
                "productId": { "type": "integer" }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product removed from cart",
            "schema": {
              "type": "object",
              "properties": {
                "message": { "type": "string" }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Item not found in cart"
          },
          "500": {
            "description": "Failed to remove product from cart"
          }
        }
      }
    },
    "/api/cart/{userId}": {
      "get": {
        "tags": ["Cart"],
        "summary": "Get cart items for a specific user",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "User ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Cart items retrieved successfully",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/CartItem" }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Failed to fetch cart items"
          }
        }
      }
    },
    "/api/cart/clear": {
      "post": {
        "tags": ["Cart"],
        "summary": "Clear the cart for a user",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "userId": { "type": "integer" }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Cart cleared successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": { "type": "string" }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Failed to clear cart"
          }
        }
      }
    },
    "/api/orders": {
      "post": {
        "tags": ["Orders"],
        "summary": "Place an order",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "userId": { "type": "integer" }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Order placed successfully",
            "schema": {
              "$ref": "#/definitions/Order"
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Failed to place order"
          }
        }
      }
    },
    "/api/orders/{userId}": {
      "get": {
        "tags": ["Orders"],
        "summary": "Get orders for a specific user",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "User ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Orders retrieved successfully",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Order" }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Failed to fetch orders"
          }
        }
      }
    },
    "/api/orders/{orderId}": {
      "get": {
        "tags": ["Orders"],
        "summary": "Get order details",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "Order ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Order details retrieved successfully",
            "schema": {
              "$ref": "#/definitions/Order"
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Order not found"
          },
          "500": {
            "description": "Failed to fetch order details"
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "id": { "type": "integer" },
        "username": { "type": "string" },
        "emailId": { "type": "string" },
        "password": { "type": "string" }
      }
    },
    "Product": {
      "type": "object",
      "properties": {
        "id": { "type": "integer" },
        "name": { "type": "string" },
        "category": { "type": "string" },
        "price": { "type": "number" },
        "description": { "type": "string" }
      }
    },
    "CartItem": {
      "type": "object",
      "properties": {
        "id": { "type": "integer" },
        "userId": { "type": "integer" },
        "productId": { "type": "integer" }
      }
    },
    "Order": {
      "type": "object",
      "properties": {
        "id": { "type": "integer" },
        "userId": { "type": "integer" },
        "products": {
          "type": "array",
          "items": { "$ref": "#/definitions/Product" }
        },
        "totalPrice": { "type": "number" },
        "orderDate": { "type": "string", "format": "date-time" }
      }
    }
  },
  "securityDefinitions": {
    "bearerAuth": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  }
}
